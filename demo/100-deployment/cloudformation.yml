AWSTemplateFormatVersion: 2010-09-09


Description: Deployment pipelines


Parameters:

  CodeStarSourceConnectionArn:
    Type: String

  CodeStarSourceConnectionBranchName:
    Type: String

  CodeStarSourceConnectionFullRepositoryId:
    Type: String

  ProjectName:
    Type: String


Resources:

  AnalyticsBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref MarketPlaceBuildProjectServiceRole
      Source:
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - echo "Success!"
        Type: CODEPIPELINE

  AnalyticsDataTestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref MarketPlaceBuildProjectServiceRole
      Source:
        BuildSpec: |
          version: 0.2
          env:
            secrets-manager:
              MP_DB_HOST: "marketplace-db:host"
              MP_DB_PORT: "marketplace-db:port"
              MP_DB_USER: "marketplace-db:username"
              MP_DB_PASSWORD: "marketplace-db:password"
          phases:
            install:
              commands:
                - pyenv virtualenv greatexp
                - pyenv global greatexp
                - pip install great-expectations~=0.13.19
              runtime-versions:
                python: 3.9
            pre_build:
              commands:
                - mkdir -p demo/300-analytics/great_expectations/uncommitted
                - envsubst < demo/300-analytics/template_great_expectations/config_variables.yml > demo/300-analytics/great_expectations/uncommitted/config_variables.yml
            build:
              commands:
                - cd demo/300-analytics/great_expectations
                - great_expectations checkpoint run 20141231
        Type: CODEPIPELINE

  AnalyticsPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStore
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                BranchName: !Ref CodeStarSourceConnectionBranchName
                ConnectionArn: !Ref CodeStarSourceConnectionArn
                FullRepositoryId: !Ref CodeStarSourceConnectionFullRepositoryId
              OutputArtifacts:
                - Name: repo
        - Name: Test
          Actions:
            - Name: Code
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref AnalyticsBuildProject
              InputArtifacts:
                - Name: repo
            - Name: Data
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref AnalyticsDataTestProject
              InputArtifacts:
                - Name: repo
        - Name: Build
          Actions:
            - Name: SalesPricePredictionModel
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref AnalyticsBuildProject
              InputArtifacts:
                - Name: repo

  ArtifactStore:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::AccountId}-${AWS::StackName}-artifact-store

  ArtifactStorePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactStore
      PolicyDocument:
        Statement:
          Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            - s3:PutObjectAcl
          Effect: Allow
          Principal:
            AWS:
              - !GetAtt MarketPlaceBuildProjectServiceRole.Arn
              - !GetAtt PipelineRole.Arn
          Resource: !Sub ${ArtifactStore.Arn}/*

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
        - PolicyName: ManageResources
          PolicyDocument:
            Statement:
              Action:
                - ec2:AuthorizeSecurityGroupIngress
                - ec2:DescribeAccountAttributes
                - ec2:CreateSecurityGroup
                - ec2:DeleteSecurityGroup
                - ec2:DescribeSecurityGroups
                - rds:CreateDBInstance
                - rds:DeleteDBInstance
                - rds:DescribeDBInstances
                - rds:ModifyDBInstance
                - secretsmanager:CreateSecret
                - secretsmanager:DeleteSecret
                - secretsmanager:GetRandomPassword
                - secretsmanager:GetSecretValue
                - secretsmanager:PutSecretValue
                - secretsmanager:TagResource
                - secretsmanager:UntagResource
                - secretsmanager:UpdateSecret
              Effect: Allow
              Resource: "*"
        - PolicyName: CreateServiceLinkedRoleForRDS
          # cf. https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html#service-linked-role-permissions
          PolicyDocument:
            Statement:
              - Action: iam:CreateServiceLinkedRole
                Condition:
                  StringLike:
                    iam:AWSServiceName: rds.amazonaws.com
                Effect: Allow
                Resource: arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS*
              - Action:
                  - iam:AttachRolePolicy,
                  - iam:PutRolePolicy
                Effect: Allow
                Resource: arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS*

  MarketPlaceBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Modes:
          - LOCAL_CUSTOM_CACHE
        Type: LOCAL
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      ServiceRole: !Ref MarketPlaceBuildProjectServiceRole
      Source:
        BuildSpec: |
          version: 0.2
          cache:
            paths:
              - /root/.cache/pip/**/*
          env:
            secrets-manager:
              MP_DB_HOST: "marketplace-db:host"
              MP_DB_PORT: "marketplace-db:port"
              MP_DB_USER: "marketplace-db:username"
              MP_DB_PASSWORD: "marketplace-db:password"
          phases:
            install:
              commands:
                - pyenv virtualenv dbt
                - pyenv global dbt
                - pip install dbt-postgres~=0.19.1
              runtime-versions:
                python: 3.9
            pre_build:
              commands:
                - mkdir -p ~/.dbt
                - cp demo/200-marketplace/.dbt/profiles.yml ~/.dbt/profiles.yml
            build:
              commands:
                - echo $MP_LOAD_DATA_BEFORE_DT
                - cd demo/200-marketplace
                - dbt debug
                - dbt seed
                - dbt run
        Type: CODEPIPELINE

  MarketPlaceBuildProjectServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Policies:
        - PolicyName: ManageLogs
          PolicyDocument:
            Statement:
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:GetLogEvents
                - logs:PutLogEvents
              Effect: Allow
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
        - PolicyName: AccessSecrets
          PolicyDocument:
            Statement:
              Action:
                - secretsmanager:GetSecretValue
              Effect: Allow
              Resource:  "*"

  MarketPlacePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStore
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                BranchName: !Ref CodeStarSourceConnectionBranchName
                ConnectionArn: !Ref CodeStarSourceConnectionArn
                FullRepositoryId: !Ref CodeStarSourceConnectionFullRepositoryId
              OutputArtifacts:
                - Name: repo
        - Name: DeployInfrastructure
          Actions:
            - Name: Database
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                OutputFileName: output.cloudformation.json
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${ProjectName}-200-marketplace
                TemplatePath: repo::demo/200-marketplace/cloudformation.yml
              InputArtifacts:
                - Name: repo
        - Name: DeployData
          Actions:
            - Name: ApproveHouseSales2014
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              RunOrder: 3
            - Name: HouseSales2014
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                EnvironmentVariables: '[{"name":"MP_LOAD_DATA_BEFORE_DT","value":"2015-01-01","type":"PLAINTEXT"}]'
                ProjectName: !Ref MarketPlaceBuildProject
              InputArtifacts:
                - Name: repo
              RunOrder: 4
            - Name: ApproveHouseSales2014And2015
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
              RunOrder: 5
            - Name: HouseSales2014And2015
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                EnvironmentVariables: '[{"name":"MP_LOAD_DATA_BEFORE_DT","value":"2016-01-01","type":"PLAINTEXT"}]'
                ProjectName: !Ref MarketPlaceBuildProject
              InputArtifacts:
                - Name: repo
              RunOrder: 6

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
      Policies:
        - PolicyName: ManageCloudFormationStacks
          PolicyDocument:
            Statement:
              Action:
                - cloudformation:CreateStack
                - cloudformation:DescribeStacks
                - cloudformation:UpdateStack
              Effect: Allow
              Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectName}-*/*
        - PolicyName: ManageCodeBuildBuilds
          PolicyDocument:
            Statement:
              Action:
                - codebuild:BatchGetBuilds
                - codebuild:RetryBuild
                - codebuild:StartBuild
                - codebuild:StopBuild
              Effect: Allow
              Resource: "*"
        - PolicyName: UseCodeStarConnection
          PolicyDocument:
            Statement:
              Action: codestar-connections:UseConnection
              Effect: Allow
              Resource: !Ref CodeStarSourceConnectionArn
        - PolicyName: PassCloudFormationRole
          PolicyDocument:
            Statement:
              Action: iam:PassRole
              Effect: Allow
              Resource: !GetAtt CloudFormationRole.Arn
